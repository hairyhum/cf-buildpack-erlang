#!/bin/bash

##
# usage: bin/compile <build-dir> <cache-dir>

set -ex
bpdir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p $1 $2
build=$(cd $1 && pwd)
test -z ${build} && exit
cache=$(cd $2 && pwd)
test -z ${cache} && exit
DEFAULT_OTP_VERSION="not_master"
echo `ls -la ${build}`

# if [ -f ${build}/.preferred_otp_version ]; then
#     echo "Reading otp version"
#     OTP_VERSION=$(cat ${build}/.preferred_otp_version)
# fi
ver="otp_src_20.0"
# ver=${OTP_VERSION:=${DEFAULT_OTP_VERSION}}
tarball=${ver}.tgz
OTP_TARBALL_URL="http://erlang.org/download/otp_src_20.0.tar.gz"
ERLROOT=${build}/otp
PROFILE=${build}/.profile.d

rm -rf ${build}/otp
rm -rf ${cache}/${tarball}

echo "-----> Using Erlang/OTP $ver"

(
    set -e

    # Already cached?
    test -f ${cache}/${tarball} && exit

    rm -rf ${cache}/* # be sure not to build up cruft
    cd ${cache}
    echo "-------> Fetching Erlang/OTP $ver"
    curl -s ${OTP_TARBALL_URL} -o ${tarball} || exit 1
)

echo "-------> Unpacking Erlang/OTP $ver"
mkdir -p ${ERLROOT}
tar -zxf ${cache}/${tarball} -C ${ERLROOT}
echo "-------> Installing Erlang/OTP $ver"

cd ${ERLROOT}/otp_src_20.0
echo `ls`
./otp_build autoconf
./configure
make

ln -s ${ERLROOT} /app/otp
# ${ERLROOT}/Install -minimal /app/otp

PATH=/app/otp/bin:$PATH
export PATH

cd $build

if [ ! -e "rebar" ]; then
  echo "-----> Installing Rebar from buildpack"
  cp ${bpdir}/opt/rebar ./
fi

echo "-----> Building with Rebar"
unset GIT_DIR
./rebar get-deps compile 2>&1 | sed -u 's/^/       /'
if [ ${PIPESTATUS[0]} -ne 0 ]; then
  echo "-----> Build failed"
  exit 1
fi

if [ -f ${bpdir}/opt/otp.sh ]; then
  mkdir -p ${PROFILE}
  cp ${bpdir}/opt/otp.sh ${PROFILE}
fi

echo "-----> Build succeeded"
